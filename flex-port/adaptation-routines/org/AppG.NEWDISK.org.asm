	* NEWDISK
	*
	* COPYRIGHT (C) 1980 BY
	* TECHNICAL SYSTEMS CONSULTANTS. INC.
	* 111 PROVIDENCE RD, CHAPEL HILL, NC 27514
	*
	* DISK FORMATTING PROGRAM FOR 6809 FLEX.
	* GENERAL VERSION DESIGNED FOR WD 1771/1791.
	* THE NEWDISK PROGRAM INITIALIZES A NEW DISKETTE AND
	* THEN PROCEEDS TO VERIFY ALL SECTORS AND INITIALIZE
	* TABLES. THIS VERSION IS SETUP FOR AN 8 INCH DISK
	* SYSTEM WITH HINTS AT CERTAIN POINTS FOR ALTERING
	* FOR A SINGLE-DENSITY 5 INCH DISK SYSTEM. THIS
	* VERSION IS NOT INTENDED FOR 5 INCH DOUBLE-DENSITY.
	**************************************************
	* DISK SIZE PARAMETERS
	* **** **** **********
	* THE FOLLOWING CONSTANTS SETUP THE SIZE OF THE
	* DISK TO BE FORMATTED. THE VALUES SHOWN ARE FOR
	* 8 INCH DISKS. FOR 5 INCH DISKS, USE APPROPRIATE
	* VALUES. (IE. 35 TRACKS AND 10 SECTORS PER SIDE)
	**************************************************
MAXTRK		EQU	35				; NUMBER OF TRACKS
	* SINGLE DENSITY:
SMAXS0		EQU	10				; SD MAX SIDE 0 SECTORS
SMAXS1		EQU	10				; SD MAX SIDE 1 SECTORS
	* DOUBLE DENSITY:
DMAXS0		EQU	10				; DD MAX SIDE 0 SECTORS
DMAXS1		EQU	10				; DD MAX SIDE 1 SECTORS
	**************************************************
	* MORE DISK SIZE DEPENDENT PARAMETERS
	* **** **** **** ********* **********
	* THE FOLLOWING VALUES ARE ALSO DEPENDENT ON THE
	* SIZE OF DISK BEING FORMATTED. EACH VALUE SHOWN
	* IS FOR 8 INCH WITH PROPER 5 INCH VALUES IN
	* PARENTHESES.
	**************************************************
	* SIZE OF SINGLE DENSITY WORK BUFFER FOR ONE TRACK
TKSZ		EQU	3050				; (USE 3050 FOR 5 INCH)
	* TRACK START VALUE
		TST	EQU				; 0 (USE 0 FOR 5 INCH)
	* SECTOR START VALUE
SST		EQU	7				; (USE 7 FOR 5 INCH)
	* SECTOR GAP VALUE
GAP		EQU	14				; (USE 14 FOR 5 INCH)
	**************************************************
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; etc.
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; ...
		BSR	OUTIN2				; GET RESPONSE
		BNE	EXIT				; EXIT IF "NO"
		CLR	DBSDF				; CLEAR FLAG
	* PLACE A "BRA FORM25" HERE IF CONTROLLER
	* IS ONLY SINGLE SIDED.
		BRA	FORM25
		LDX	#DBST				; ASK IF DOUBLE SIDED
		BSR	OUTIN				; PRINT & GET RESPONSE
		BNE	FORM25				; SKIP IF "NO"
		INC	DBSDF				; SET FLAG
		LDA	#SMAXS1				; SET MAX SECTOR
		STA	MAX
FORM25		CLR	DENSE				; INITIALIZE SINGLE DENSITY
		CLR	DNSITY
	* PLACE A "BRA FORM26" HERE IF CONTROLLER
	* IS ONLY SINGLE DENSITY.
		BRA	FORM26
		LDX	#DDSTR				; ASK IF DOUBLE DENSITY
		BSR	OUTIN				; PRINT & GET RESPONSE
		BNE	FORM26				; SKIP IF "NO"
		INC	DENSE				; SET FLAG IF SO
FORM26		LDX	#NMSTR				; ASK FOR VOLUME NAME
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; ...
error ;;;; !!!! ;;;; etc.
	**************************************************
	* SECTOR MAPS
	* ****** ****
	* THE MAPS SHOWN BELOW CONTAIN THE CORRECT
	* INTERLEAVING FOR AN 8 INCH DISK. IF USING 5
	* INCH DISKS (SINGLE DENSITY) YOU SHOULD USE
	* SOMETHING LIKE '1,3,5,7,9,2,4,6,8,10' FOR
	* SSCMAP FOR A SINGLE SIDED DISK.
	**************************************************
SSCMAP		FCB	1,3,5,7,9,2,4,6,8,10
DSCMAP		EQU	SSCMAP
	* STRINGS
SURES		FCC	'ARE YOU SURE? '
		FCB	4
WPST		FCC	'DISK IS PROTECTED!'
		FCB	4
SCRDS		FCC	'SCRATCH DISK IN DRIVE '
		FCB	4
FATERS		FCC	'FATAL ERROR --- '
ABORTS		FCC	'FORMATTING ABORTED'
		FCB	4
BADSS		FCC	'BAD SECTOR AT '
		FCB	4
CMPLTE		FCC	'FORMATTING COMPLETE'
		FCB	4
SECST		FCC	'TOTAL SECTORS = '
		FCB	4
DBST		FCC	'DOUBLE SIDED DISK? '
		FCB	4
DDSTR		FCC	'DOUBLE DENSITY DISK? '
		FCB	4
NMSTR		FCC	'VOLUME NAME? '
		FCB	4
NUMSTR		FCC	'VOLUME NUMBER? '
		FCB	4
	***************************************************************
	* WRITE TRACK ROUTINE *
	***************************************************************
	* THIS SUBROUTINE MUST BE USER SUPPLIED. *
	* IT SIMPLY WRITES THE DATA FOUND AT "WORK" ($0800) TO THE *
	* CURRENT TRACK ON THE DISK. NOTE THAT THE SEEK TO TRACK *
	* OPERATION HAS ALREADY BEEN PERFORMED. IF SINGLE DENSITY, *
	* "TKSZ" BYTES SHOULD BE WRITTEN. IF DOUBLE, "TKSZ*2" *
	* BYTES SHOULD BE WRITTEN. THIS ROUTINE SHO6LD PERFORM *
	* ANY NECESSARY DENSITY SELECTION BEFORE WRITING. DOUBLE *
	* DENSITY IS INDICATED BY THE BYTE "DNSITY" BEING NON-ZERO. *
	* THERE ARE NO ENTRY PARAMETERS AND ALL REGISTERS MAY BE *
	* DESTROYED ON EXIT. THE CODE FOR THIS ROUTINE MUST NOT *
	* EXTEND PAST $0800 SINCE THE TRACK DATA IS STORED THERE. *
	***************************************************************
	*********************************************
	* WESTERN DIGITAL PARAMTERS
	* ******* ******* *********
	* REGISTERS:
COMREG		EQU	$E018				; COMMAND REGISTER
TRKREG		EQU	$E019				; TRACK REGISTER
SECREG		EQU	$E01A				; SECTOR REGISTER
DATREG		EQU	$E018				; DATA REGISTER
	* COMMANDS:
WTCMD		EQU	$F4				; WRITE TRACK COMMAND
	*********************************************
	*********************************************
	* CONTROLLER DEPENDENT PARAMETERS
	* ********** ********* **********
DRVREG		EQU	$E014				; DRIVE SELECT REGISTER
	*********************************************
WRTTRK		LDX	#WORK				; POINT TO DATA
		LDA	#WTCMD				; SETUP WRITE TRACK COMMAND
		STA	COMREG				; ISSUE COMMAND
		JSR	DELAY
WRTTR2		LDA	COMREG				; CHECK WD STATUS
		BITA	#$02				; IS WD READY FOR DATA?
		BNE	WRTTR4				; SKIP IF READY
		BITA	#$01				; IS WD BUSY?
		BNE	WRTTR2				; LOOP IF BUSY
		BRA	WRTTR8				; EXIT IF NOT
WRTTR4		LDA	0,X+				; GET A DATA BYTE
		STA	DATREG				; SEND TO DISK
		CMPX	#SWKEND				; OUT OF DATA?
		BNE	WRTTR2				; REPEAT IF NOT
WAIT		LDA	COMREG				; CHECK WD STATUS
		BITA	#$01				; IS IT BUSY?
		BNE	WAIT				; LOOP IF SO
WRTTR8		RTS				;  RETURN
DELAY		JSR	DELAY2
DELAY2		JSR	DELAY4
DELAY4		RTS
	**********************************************************
	*
	* BOOTSTRAP FLEX LOADER
	*
	* THE CODE FOR THE BOOTSTRAP FLEX LOADER MUST BE IN MEMORY
	* AT $C100 WHEN NEWDISK IS RUN. THERE ARE TWO WAYS IT CAN
	* BE PLACED THERE. ONE IS TO ASSEMBLE THE LOADER AS A
	* SEPARATE FILE AND APPEND IT ONTO THE END OF THE NEWDISK
	* FILE. THE SECOND IS TO SIMPLY PUT THE SOURCE FOR THE
	* LOADER IN-LINE HERE WITH AN ORG TO $C100. THE FIRST FEW
	* LINES OF CODE FOR THE LATTER METHOD ARE GIVEN HERE TO
	* GIVE THE USER AN IDEA OF HOW TO SETUP THE LOADER SOURCE.
	*
	* IT IS NOT NECESSARY TO HAVE THE LOADER AT $C100 IN ORDER
	* FOR THE NEWDISK TO RUN. IT SIMPLY MEANS THAT WHATEVER
	* HAPPENS TO BE IN MEMORY AT $C100 WHEN NEWDISK IS RUN
	* WOULD BE WRITTEN OUT AS A BOOT. AS LONG AS THE CREATED
	* DISK WAS FOR USE AS A DATA DISK ONLY AND WOULD NOT BE
	* BOOTED FROM, THERE WOULD BE NO PROBLEM.
	*
	**********************************************************
	* 6809 BOOTSTRAP FLEX LOADER
	* EQUATES
STACK		EQU	$C07F
SCTBUF		EQU	$C300				; DATA SECTOR BUFFER
	* START OF UTILITY
		ORG	$C100
BOOT		BRA	LOAD0
		FCB	0,0,0
TRK		FCB	0				; FILE START TRACK
SCT		FCB	0				; FILE START SECTOR
DNS		FCB	0				; DENSITY FLAG
TADR		FDB	$C100				; TRANSFER ADDRESS
LADR		FDB	0				; LOAD ADDRESS
LOADO		LDS	#STACK				; SETUP STACK
		LDD	TRK				; SETUP STARTING TRK & SCT
		STD	SCTBUF
		LDY	#SCTBUF+256
	* PERFORM ACTUAL FILE LOAD
LOAD1		BSR	GETCH				; GET A CHARACTER
		CMPA	#$02				; DATA RECORD HEADER?
		BEQ	LOAD2				; SKIP,IF SO
		CMPA	#$16				; XFR ADDRESS HEADER?
		BNE	LOAD1				; LOOP IF NEITHER
		BSR	GETCH				; GET TRANSFER ADDRESS
		STA	TADR
		BSR	GETCH
		STA	TADR+1
		BRA	LOAD1				; CONTINUE LOAD
LOAD2		BSR	GETCH				; GET LOAD ADDRESS
		STA	LADR
		BSR	GETCH
		STA	LADR+1
		BSR	GETCH				; GET BYTE COUNT
error ;;;; !!!! ;;;; C13C 1F 894D TAB PUT IN B
		BEQ	LOAD1				; LOOP IF COUNT=0
		LDX	LADR				; GET LOAD ADDRESS
LOAD3		PSHS	B,X
		BSR	GETCH				; GET A DATA CHARACTER
		PULS	B,X
		STA	0,X+				; PUT CHARACTER
error ;;;; !!!! ;;;; C14C 5A DECB END OF DATA IN RECORD?
		BNE	LOAD3				; LOOP IF NOT
		BRA	LOAD1				; GET ANOTHER RECORD
	* GET CHARACTER ROUTINE - READS A SECTOR IF NECESSARY
GETCH		CMPY	#SCTBUF+256				; OUT OF DATA?
		BNE	GETCH4				; GO READ CHARACTER IF NOT.
GETCH2		LDX	#SCTBUF				; POINT TO BUFFER
		LDD	0,X				; GET FORWARD LINK
		BEQ	GO				; IF ZERO, FILE IS LOADED
		BSR	READ				; READ NEXT SECTOR
		BNE	BOOT				; START OVER IF ERROR
		LDY	#SCTBUF+4				; POINT PAST LINK
GETCH4		LDA	0,Y+				; ELSE, GET A CHARACTER
		RTS
	* FILE IS LOADED, JUMP TO IT
GO		JMP	[TADR]				; JUMP TO TRANSFER ADDRESS
	* READ SINGLE SECTOR
	*
	* THIS ROUTINE MUST READ THE SECTOR WHOSE TRACK
	* AND SECTOR ADDRESS ARE IN A ANB B ON ENTRY.
	* THE DATA FROM THE SECTOR IS TO BE PLACED AT
	* THE ADDRESS CONTAINED IN X ON ENTRY.
	* IF ERRORS, A NOT-EQUAL CONDITION SHOULD BE
	* RETURNED. THIS ROUTINE WILL HAVE TO DO SEEKS.
	* A,B,X, AND U MAY BE DESTROYED BY THIS ROUTINE,
	* BUT Y MUST BE PRESERVED.
	* WESTERN DIGITAL EQUATES
DRQ		EQU	2				; DRQ BIT MASK
BUSY		EQU	1				; BUSY MASK
RDMSK		EQU	$1C				; READ ERROR MASK
RDCMND		EQU	$8C				; READ COMMAND
SKCMND		EQU	$1B				; SEEK COMMAND
	* READ ONE SECTOR
READ		BSR	XSEEK				; SEEK TO TRACK
		LDA	#RDCMND				; SETUP READ SECTOR COMMAND
		STA	COMREG				; ISSUE READ COMMAND
		BSR	DEL28				; DELAY
		CLRB				;  GET SECTOR LENGTH (=256)
		LDX	#SCTBUF				; POINT TO SECTOR BUFFER
READ3		LDA	COMREG				; GET WD STATUS
		BITA	#DRQ				; CHECK FOR DATA
		BNE	READ5				; BRANCH IF DATA PRESENT
		BITA	#BUSY				; CHECK IF BUSY
		BNE	READ3				; LOOP IF SO
		TFR	A,B				; SAVE ERROR CONDITION
		BRA	READ6
READ5		LDA	DATREG				; GET DATA BYTE
		STA	0,X+				; PUT IN MEMORY
error ;;;; !!!! ;;;; C18E 5A DECB DEC THE COUNTER
		BNE	READ3				; LOOP TIL DONE
		BSR	XWAIT				; WAIT TIL WD IS FINISHED
READ6		BITB	#RDMSK				; MASK ERRORS
		RTS				;  RETURN
	* WAIT FOR 1771 TO FINISH COMMAND
XWAIT		LDB	COMREG				; GET WD STATUS
		BITB	#BUSY				; CHECK IF BUSY
		BNE	XWAIT				; LOOP TIL NOT BUSY
		RTS				;  RETURN
	* SEEK THE SPECIFIED TRACK
XSEEK		STB	SECREG				; SET SECTOR
		CMPA	TRKREG				; DIF THAN LAST?
		BEQ	DEL28				; EXIT IF NOT
		STA	DATREG				; SET NEW WD TRACK
		BSR	DEL28				; GO DELAY
		LDA	#SKCMND				; SETUP SEEK COMMAND
		STA	COMREG				; ISSUE SEEK COMMAND
error ;;;; !!!! ;;;; C1BO 8D 02 BSR DEL28 GO DELAY
		BSR	XWAIT				; WAIT TIL DONE
	* DELAY
DEL28		JSR	DEL14
DEL14		JSR	DEL
DEL		RTS
error ;;;; !!!! ;;;; END NEWDISK
